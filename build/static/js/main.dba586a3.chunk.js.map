{"version":3,"sources":["store/actions/types.js","store/reducers/user.js","store/reducers/index.js","store/reducers/errors.js","store/index.js","services/AuthService.js","store/actions/actionCreators.js","store/actions/auth.js","components/DesktopContainer.js","pages/Main.js","pages/Home.js","pages/About.js","validators/messages.js","pages/Login.js","validators/login.js","pages/Register.js","validators/register.js","pages/Profile.js","pages/PrivateRoute.js","App.js","store/actions/user.js","index.js"],"names":["SET_CURRENT_USER","LOGOUT","REGISTER_SUCCESS","GET_ERRORS","user","state","arguments","length","undefined","action","type","isAuthenticated","profile","payload","combineReducers","errors","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","API_URL","AuthService","login","email","password","axios","post","register","data","getProfile","get","headers","this","authHeader","logout","localStorage","removeItem","getToken","getItem","saveToken","token","setItem","Authorization","concat","setCurrentUser","getErrors","DesktopContainer","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","history","_this$props","children","react_default","a","createElement","Menu","className","Container","Item","as","Link","to","position","Dropdown","item","text","Header","icon","content","Divider","onClick","Component","connect","dispatch","push","location","reload","withRouter","Main","_ref","components_DesktopContainer","Segment","vertical","HomePage","pages_Main","LandingPage","REQUIRED","LoginForm","onSubmit","e","preventDefault","isValid","setState","isLoading","loginUser","onChange","defineProperty","target","name","value","_validateInput","Validator","isEmpty","validateInput","nextProps","_this$state","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","react_router_dom","Image","src","size","centered","color","Form","error","loginError","autoComplete","stacked","Input","fluid","iconPosition","placeholder","defaultValue","Message","Button","disabled","Loader","active","inverted","inline","then","resp","status","catch","response","RegisterForm","registerUser","firstName","lastName","confirmPassword","registerError","ProfilePage","component","rest","objectWithoutProperties","react_router","assign","render","initialState","App","_this2","finally","exact","path","Home","About","Login","Register","pages_PrivateRoute","Profile","Promise","resolve","reject","store","createStore","rootReducer","applyMiddleware","thunk","ReactDom","es","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.dba586a3.chunk.js","sourcesContent":["export const SET_CURRENT_USER   = \"SET_CURRENT_USER\";\nexport const LOGOUT             = \"LOGOUT\";\nexport const REGISTER_SUCCESS   = 'REGISTER_SUCCESS';\nexport const GET_ERRORS         = 'GET_ERRORS';\n","import { SET_CURRENT_USER, LOGOUT } from \"../actions/types\";\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        isAuthenticated: true,\n        profile: action.payload\n      };\n    case LOGOUT:\n      return {\n        isAuthenticated: false,\n        profile: {}\n      };\n    default:\n      return state;\n  }\n}\n\nexport default user;\n","import { combineReducers } from \"redux\";\nimport user from './user';\nimport errors from './errors';\n\nexport default combineReducers({\n  user,\n  errors\n})\n","import { GET_ERRORS } from '../actions/types';\n\nexport default function(state = {}, action) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./reducers/index\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(initialState) {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancer(applyMiddleware(thunk))\n  );\n  return store;\n}\n","\n/**\n * Auth Service\n */\nimport axios from 'axios';\n//import { API_URL } from '../config';\n\nconst API_URL = \"http://127.0.0.1:8000/api\"\n\nconst AuthService = {\n  login: function(email, password) {\n    return axios.post(API_URL + '/auth/', { email: email, password: password });\n  },\n  register: function(data) {\n    return axios.post(API_URL + '/register', { data });\n  },\n  getProfile: function() {\n    return axios.get(API_URL + '/current/', { headers: this.authHeader() });\n  },\n  logout: function () {\n    localStorage.removeItem('token');\n  },\n  getToken: function() {\n    return localStorage.getItem('token');\n  },\n  saveToken: function(token) {\n    localStorage.setItem('token', token);\n  },\n  authHeader: function () {\n    return { Authorization: `Token ${this.getToken()}` }\n  }\n}\n\nexport default AuthService\n","import { SET_CURRENT_USER, REGISTER_SUCCESS, LOGOUT, GET_ERRORS } from \"./types\";\n\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: user\n  }\n}\n\nexport function registerSuccess() {\n  return {\n    type: REGISTER_SUCCESS\n  }\n}\n\nexport function logoutUser() {\n  return {\n    type: LOGOUT\n  }\n}\n\nexport function getErrors(errors) {\n  return {\n    type: GET_ERRORS,\n    payload: errors\n  }\n}\n","import AuthService from '../../services/AuthService';\nimport { setCurrentUser, registerSuccess, logoutUser, getErrors } from \"./actionCreators\";\n\n/**\n * Login user action\n */\nexport const loginUser = (state, history) => dispatch => {\n  AuthService.login(state.email, state.password).then(resp => {\n    if (resp.status == 200) {\n      dispatch(setCurrentUser(resp.data.user));\n      AuthService.saveToken(resp.data.token);\n      history.push('/');\n    }\n  }).catch(error => {\n    if (error.response.data) {\n      dispatch(getErrors({\n        loginError: error.response.data.error\n      }));\n    }\n  });\n}\n\n/**\n * Logout action\n */\nexport const logout = (history) => dispatch => {\n  AuthService.logout();\n  dispatch(logoutUser());\n  history.push('/')\n  window.location.reload();\n}\n\n/**\n * Register user action\n */\nexport const registerUser = (data, history) => dispatch => {\n  AuthService.register(data).then(resp => {\n    if (resp.status == 200) {\n      dispatch(registerSuccess());\n      history.push('/login');\n    }\n  }).catch(error => {\n    if (error.response.data) {\n      dispatch(getErrors({\n        registerError: error.response.data.error\n      }));\n    }\n  });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Link, withRouter} from 'react-router-dom';\nimport {Container, Menu, Dropdown} from 'semantic-ui-react'\n\nimport { logout } from '../store/actions/auth';\n\nclass DesktopContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  logout = () => this.props.logout(this.props.history);\n\n  render() {\n    const { children, user } = this.props\n\n    return (\n      <div>\n        <Menu className=\"top\">\n          <Container>\n            <Menu.Item as={Link} to='/'>Home</Menu.Item>\n            <Menu.Item as={Link} to='/about'>About</Menu.Item>\n\n            {user.isAuthenticated\n              ? <Menu.Menu position='right'>\n                  <Dropdown item text='My Account'>\n                    <Dropdown.Menu>\n                      <Dropdown.Header\n                        icon='user'\n                        content={user.email}\n                      />\n                      <Dropdown.Divider />\n                      <Dropdown.Item as={Link} to='/profile'>Profile</Dropdown.Item>\n                      <Dropdown.Item onClick={this.logout} >Logout</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n              </Menu.Menu>\n              : <Menu.Menu position='right'>\n                  <Menu.Item as={Link} to='/login'>Login</Menu.Item>\n                  <Menu.Item as={Link} to='/sign-up'>Sign up</Menu.Item>\n                </Menu.Menu>\n            }\n          </Container>\n        </Menu>\n        {children}\n      </div>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  user: PropTypes.object,\n  children: PropTypes.node,\n  logout: PropTypes.func\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps, { logout })(withRouter(DesktopContainer));","import React from 'react';\nimport { Container, Segment } from 'semantic-ui-react';\nimport DesktopContainer from '../components/DesktopContainer';\n\nconst Main = ({ children }) => (\n  <DesktopContainer>\n    <Segment vertical>\n      <Container>\n        {children}\n      </Container>\n    </Segment>\n  </DesktopContainer>\n);\n\nexport default Main;\n","import React from 'react';\nimport Main from './Main';\n\nconst HomePage = () => (\n  <Main>\n    <h1>Home Page</h1>\n  </Main>\n)\n\nexport default HomePage;\n","import React from 'react';\nimport Main from './Main';\n\nconst LandingPage = () => (\n  <Main>\n    <h1>About Page</h1>\n  </Main>\n)\n\nexport default LandingPage;\n","export const REQUIRED = 'This field is required';","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Grid, Header, Image, Message, Segment,\n Loader } from 'semantic-ui-react'\n\nimport validateInput from '../validators/login';\nimport { loginUser } from '../store/actions/auth';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user.isAuthenticated) {\n      this.props.history.push('/');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.user && nextProps.user.isAuthenticated) {\n      this.props.history.push('/');\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n        isLoading: false\n      });\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.loginUser(this.state, this.props.history);\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  isValid = () => {\n    const { errors, isValid } = validateInput(this.state);\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  render() {\n    const { errors, email, password, isLoading } = this.state;\n\n    return (\n      <div className='login-form'>\n        <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Link to='/'>\n              <Image src='/assets/images/logo.png' size='tiny' centered />\n            </Link>\n\n            <Header as='h2' color='teal' textAlign='center'>\n              Login\n            </Header>\n            <Form size='large'\n              onSubmit={this.onSubmit}\n              error={errors.loginError ? true : false}\n              autoComplete='off'\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid icon='user'\n                  iconPosition='left'\n                  name='email'\n                  placeholder='E-mail'\n                  defaultValue={email}\n                  error={errors.email ? true : false}\n                  onChange={this.onChange}\n                />\n                <Form.Input\n                  fluid icon='lock'\n                  iconPosition='left'\n                  name='password'\n                  placeholder='Password'\n                  type='password'\n                  defaultValue={password}\n                  error={errors.password ? true : false}\n                  onChange={this.onChange}\n                />\n\n                <Message error content={errors.loginError} />\n\n                <Button color='teal' fluid size='large' disabled={isLoading}>\n                  {!isLoading\n                    ? 'Login'\n                    : <Loader active inverted inline size='small' />\n                  }\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              Don't have an account? <Link to='/sign-up'>Sign up!</Link>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nLoginForm.propTypes = {\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  errors: state.errors\n})\n\nexport default connect(mapStateToProps, { loginUser })(LoginForm)\n","import Validator from 'validator';\nimport isEmpty from 'lodash/isEmpty';\nimport { REQUIRED } from \"./messages\";\n\nexport default function validateInput(data) {\n  let errors = {};\n\n  if (Validator.isEmpty(data.email)) {\n    errors.email = REQUIRED;\n  }\n\n  if (Validator.isEmpty(data.password)) {\n    errors.password = REQUIRED;\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  }\n}\n","import React, { Component } from 'react'\nimport { Button, Form, Grid, Header, Image, Message,\n  Segment, Loader } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport validateInput from '../validators/register';\nimport { registerUser } from '../store/actions/auth';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      errors: {},\n      isLoading: false\n    };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.registerUser(this.state, this.props.history);\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  isValid = () => {\n    const { errors, isValid } = validateInput(this.state);\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    const { firstName, lastName, email, password,\n      confirmPassword, errors, isLoading } = this.state;\n\n    return(\n      <div className=\"register-form\">\n        <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n\n            <Link to='/'>\n              <Image src='/assets/images/logo.png' size='tiny' centered />\n            </Link>\n\n            <Header as='h2' color='teal' textAlign='center'>\n              Create Account\n            </Header>\n\n            <Form size='large' onSubmit={this.onSubmit}>\n              <Segment stacked>\n                <Form.Input\n                  fluid\n                  placeholder='First Name'\n                  name='firstName'\n                  defaultValue={firstName}\n                  error={errors.firstName ? true : false}\n                  onChange={this.onChange}\n                />\n                <Form.Input\n                  fluid\n                  placeholder='Last Name'\n                  name='lastName'\n                  defaultValue={lastName}\n                  error={errors.lastName ? true : false}\n                  onChange={this.onChange}\n                />\n                <Form.Input\n                  fluid\n                  placeholder='E-mail'\n                  name='email'\n                  defaultValue={email}\n                  error={errors.email ? true : false}\n                  onChange={this.onChange}\n                />\n                <Form.Input\n                  fluid\n                  placeholder='Password'\n                  name='password'\n                  type='password'\n                  defaultValue={password}\n                  error={errors.password ? true : false}\n                  onChange={this.onChange}\n                />\n                <Form.Input\n                  fluid\n                  placeholder='Confirm Password'\n                  name='confirmPassword'\n                  type='password'\n                  defaultValue={confirmPassword}\n                  error={errors.confirmPassword ? true : false}\n                  onChange={this.onChange}\n                />\n                <Button color='teal' fluid size='large' disabled={isLoading}>\n                  {!isLoading\n                    ? 'Create Account'\n                    : <Loader active inverted inline size='small' />\n                  }\n                </Button>\n              </Segment>\n            </Form>\n\n            <Message>\n              Already have an account? <Link to='/login'>Login</Link>\n            </Message>\n\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nRegisterForm.propTypes = {\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors\n})\n\nexport default connect(mapStateToProps, { registerUser })(RegisterForm)\n","import Validator from 'validator';\nimport isEmpty from 'lodash/isEmpty';\nimport { REQUIRED } from \"./messages\";\n\nexport default function validateInput(data) {\n  let errors = {};\n\n  if (Validator.isEmpty(data.firstName)) {\n    errors.firstName = REQUIRED;\n  }\n\n  if (Validator.isEmpty(data.lastName)) {\n    errors.lastName = REQUIRED;\n  }\n\n  if (Validator.isEmpty(data.email)) {\n    errors.email = REQUIRED;\n  }\n\n  if (Validator.isEmpty(data.password)) {\n    errors.password = REQUIRED;\n  }\n\n  if (Validator.isEmpty(data.confirmPassword)) {\n    errors.confirmPassword = REQUIRED;\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  }\n}\n","import React from 'react';\nimport Main from './Main';\n\nconst ProfilePage = () => (\n  <Main>\n    <h1>Profile Page</h1>\n  </Main>\n)\n\nexport default ProfilePage;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, user, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    user.isAuthenticated === true\n      ? <Component {...props} />\n      : <Redirect to='/login' />\n  )} />\n)\n\n\nconst mapStateToProps = state => ({\n  user: state.user\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\nimport PrivateRoute from './pages/PrivateRoute';\nimport { getProfile } from './store/actions/user';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n    this.props.getProfile().finally(() => {\n      this.setState({ isLoading: false });\n    });\n  }\n\n  render() {\n    if (this.state && this.state.isLoading === false) {\n      return (\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/sign-up\" component={Register} />\n            <PrivateRoute path=\"/profile\" component={Profile} />\n          </Switch>\n        </div>\n      )\n    } else {\n      return (\n        <div>Loading..</div>\n      )\n    }\n  }\n}\n\nexport default connect(null, { getProfile })(App);\n","import AuthService from \"../../services/AuthService\";\nimport { setCurrentUser } from \"./actionCreators\";\n\n/**\n * Get user profile based on token\n */\nexport function getProfile() {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      const token = AuthService.getToken();\n      if (token) {\n        AuthService.getProfile().then(resp => {\n          if (resp.data.user) {\n            dispatch(setCurrentUser(resp.data.user));\n          }\n          resolve();\n        });\n      } else {\n        resolve();\n      }\n    });\n  }\n}\n\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport {Provider} from 'react-redux';\nimport configureStore from './store/index';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport './style.css';\n\nconst initialState = {\n  user: {\n    isAuthenticated: false,\n    profile: {}\n  }\n};\n\nconst store = configureStore(initialState);\n\nReactDom.render(\n  <Provider store={store} >\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.querySelector('#root')\n)"],"sourceRoot":""}